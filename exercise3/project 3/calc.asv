function dydr = calc(vars)
%%%%%%%%%%%%%%%%%%% Import constants:%%%%%%%%%%%%%%%%%%%%%%
global MM RP GASCONST RHOcat RADIUSi EPS Ncomp MMASS Dp TEMPout rp

%%%%%%%%%%%% create variables vector for each z %%%%%%%%%%%%%%
r = (0:rp/RP:rp);
wCH4 =vars(1:RP);
wCO = vars(RP+1:2*RP) ;
wCO2 = vars(2*RP+1:3*RP);
wH2 = vars(3*RP+1:4*RP);
wH2O =vars(4*RP+1:5*RP);
wN2 = ones(RP,1) - wCH4 - wCO -wH2 -wH2O;
T = vars(5*RP+1:6*RP);

%%%%%%%%%%%%%%%%%%%%%%%% Parameter calculations %%%%%%%%%%%%%%%%%%%%
%Diffusivity
% Di=Dp*uin/(1.1 * 8 *(2- (1-Dp/RADIUSi)^2));

%Define mass and molar fractions:
Ymass =[wCH4 wCO wCO2 wH2 wH2O wN2];
Ymol = zeros(RP, 6);
for i=1:RP
    Ymol(i,:) =  convert(Ymass(i,:));
end

%Gas heat capacity:
% Cpg = cp(Ymol,T)';
%Viscocity:
% mu = viscosity(Ymol, T)';
%Calculation of rhog:
% rhog = (ptot*MM)./(GASCONST*T);
%Reynold number :
% Re =rhog.*uz.*Dp./mu;

%Create the Matrix Rcomp and column vector for the enthalpy Note that these
%are GIven For the MOLAR VALUES, NOT MASS => need to convert to mass based
[Rcomp,DELTAHr] = reaction(T,Ymol,ptot*ones(RP,1));
for i=1:Ncomp
    Rcomp(:,i) = Rcomp(:,i).*MMASS(i); %convert to mass based
end
% transfer mole based to mass based Cpg and DELTAHr
Cpg = Cpg./MM;
[Ur,LAMBDAer]=heatcoef(Re,T,Ymol,mu,Cpg);

%%%%%%%%%%%%%%%%%%%%%%%%% generate the solver %%%%%%%%%%%%%%%%%%%%
%Create 1st and 2nd derivative vector:
dwCH4dr = dss020(r(1),RADIUSi,RP,wCH4,1)';
dwCH4dr2 = dss042(r(1),RADIUSi,RP,wCH4,dwCH4dr,2,2)';

dwCOdr = dss020(r(1),RADIUSi,RP,wCO,1)';
dwCOdr2 = dss042(r(1),RADIUSi,RP,wCO,dwCOdr,2,2)';

dwCO2dr = dss020(r(1),RADIUSi,RP,wCO2,1)';
dwCO2dr2 = dss042(r(1),RADIUSi,RP,wCO2,dwCO2dr,2,2)';

dwH2dr = dss020(r(1),RADIUSi,RP,wH2,1)';
dwH2dr2 = dss042(r(1),RADIUSi,RP,wH2,dwH2dr,2,2)';

dwH2Odr = dss020(r(1),RADIUSi,RP,wH2O,1)';
dwH2Odr2 = dss042(r(1),RADIUSi,RP,wH2O,dwH2Odr,2,2)';

dTdr = dss020(r(1),RADIUSi,RP,T,1)';
dTdr2 = dss042(r(1),RADIUSi,RP,T,dTdr,2,2)';

% boundaries particle center 
dwCH4dr0 = dwCH4dr(1);
dwCOdr0 = dwCOdr(1);
dwCO2dr0 = dwCO2dr(1);
dwH2dr0 = dwH2dr(1);
dwH2Odr0 = dwH2Odr(1);
dTdr0 = dTdr(1);

% boundaries particle surface 
dwCH4drR = dwCH4dr(RP);
dwCOdrR = dwCOdr(RP);
dwCO2drR = dwCO2dr(RP);
dwH2drR = dwH2dr(RP);
dwH2OdrR = dwH2Odr(RP);
dTdrR = dTdr(RP);

dydr = [dwCH4dr0; dwCH4dr2(2:RP); dwCH4drR;...
    dwCOdr0; dwCOdr2(2:RP);dwCOdrR;...
    dwCO2dr0; dwCO2dr2(2:RP); dwCO2drR;...
    dwH2dr0; dwH2dr2(2:RP); dwH2drR;...
    dwH2Odr0; dwH2Odr2(2:RP); dwH2OdrR...
    dTdr0; dTdr2(2:RP); dTdrR];


%%%%%%%%%%%%%%%%%%%%%%% %Temperature equation: %%%%%%%%%%%%%%%%%%%%%%%
% dTdz = (1./(rhog(2:RP-1) .* uz(2:RP-1) .* Cpg(2:RP-1))).*...
%        (LAMBDAer(2:RP-1) .*(dTdr2(2:RP-1) + 1./r(2:RP-1) .* dTdr(2:RP-1))...
%        -DELTAHr(2:RP-1).*eta);
% %BCs:
% resdTdz1 = dTdr(1);
% resdTdz2 = dTdr(RP)+Ur/LAMBDAer(RP)*(T(RP)-TEMPout); %% todo
% 
% %%%%%%%%%%%%%%%%%%%%%%% %Velocity equation:%%%%%%%%%%%%%%%%%%%%%%%
% duzdz = -uz(2:RP-1)./ptot ...
%     .* (dpdz*ones(RP-2,1) - ptot./T(2:RP-1) .* dTdz);
% %BCs
% resduzdz1 =duzdr(1);
% resduzdz2 =duzdr(RP);
% 
% %%%%%%%%%%%%%%%%%%%%%%% %CH4 - mass fraction:%%%%%%%%%%%%%%%%%%%%%%%
% dwCH4dz = 1./uz(2:RP-1) ...
%     .* (Di*(1./r(2:RP-1).*dwCH4dr(2:RP-1) + dwCH4dr2(2:RP-1))...
%     - wCH4(2:RP-1) .* duzdz ...
%     + RHOcat*eta.*Rcomp(2:RP-1,1)./(rhog(2:RP-1)));
% %BCs:
% resdwCH4dr1 = dwCH4dr(1);
% resdwCH4dr2 = dwCH4dr(RP);
% 
% %%%%%%%%%%%%%%%%%%%%%%% %CO - mass fraction:%%%%%%%%%%%%%%%%%%%%%%%
% dwCOdz = 1./uz(2:RP-1) ...
%     .* (Di*(1./r(2:RP-1).*dwCOdr(2:RP-1) + dwCOdr2(2:RP-1))...
%     - wCO(2:RP-1) .* duzdz ...
%     + RHOcat*eta.*Rcomp(2:RP-1,2)./(rhog(2:RP-1)));
% resdwCOdr1 = dwCOdr(1);
% resdwCOdr2 = dwCOdr(RP);
% 
% %%%%%%%%%%%%%%%%%%%%%%% %CO2 - mass fraction:%%%%%%%%%%%%%%%%%%%%%%%
% dwCO2dz = 1./uz(2:RP-1) ...
%     .* (Di*(1./r(2:RP-1).*dwCO2dr(2:RP-1) + dwCO2dr2(2:RP-1))...
%     - wCO2(2:RP-1) .* duzdz...
%     + RHOcat*eta.*Rcomp(2:RP-1,3)./(rhog(2:RP-1)));
% resdwCO2dr1 = dwCO2dr(1);
% resdwCO2dr2 = dwCO2dr(RP);
% 
% %%%%%%%%%%%%%%%%%%%%%%%% H2 - mass fraction:%%%%%%%%%%%%%%%%%%%%%%%
% dwH2dz = 1./uz(2:RP-1) ...
%     .* (Di*(1./r(2:RP-1).*dwH2dr(2:RP-1) + dwH2dr2(2:RP-1))...
%     - wH2(2:RP-1) .* duzdz...
%     + RHOcat*eta.*Rcomp(2:RP-1,4)./(rhog(2:RP-1)));
% resdwH2dr1 = dwH2dr(1);
% resdwH2dr2 = dwH2dr(RP);
% 
% %%%%%%%%%%%%%%%%%%%%%%%% H2O - mass fraction:%%%%%%%%%%%%%%%%%%%%%%%
% dwH2Odz = 1./uz(2:RP-1) ...
%     .* (Di*(1./r(2:RP-1).*dwH2Odr(2:RP-1) + dwH2Odr2(2:RP-1))...
%     - wH2O(2:RP-1) .* duzdz...
%     + RHOcat*eta.*Rcomp(2:RP-1,5)./(rhog(2:RP-1)));
% resdwH2Odr1 = dwH2Odr(1);
% resdwH2Odr2 = dwH2Odr(RP);
% 
% %%%%%%%%%%%%%%%%%%%%%%%%Define the equations system:%%%%%%%%%%%%%%%%%%%%%%
% dydz = [resdwCH4dr1;dwCH4dz;resdwCH4dr2;...
%     resdwCOdr1;dwCOdz;resdwCOdr2;...
%     resdwCO2dr1;dwCO2dz;resdwCO2dr2;...
%     resdwH2dr1;dwH2dz;resdwH2dr2;...
%     resdwH2Odr1;dwH2Odz;resdwH2Odr2;...
%     resdTdz1;dTdz;resdTdz2;...
%     resduzdz1;duzdz;resduzdz2;...
%     dpdz];

end
